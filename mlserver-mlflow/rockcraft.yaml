# Based on https://github.com/SeldonIO/MLServer/blob/1.3.5/Dockerfile
name: mlserver-mlflow
summary: An image for Seldon MLServer MLflow
description: |
  This image is used as part of the Charmed Kubeflow product.
version: 1.3.5
license: Apache-2.0
base: ubuntu@20.04
run-user: _daemon_
services:
  mlserver-mlflow:
    override: replace
    summary: "mlserver-mlflow service"
    startup: enabled
    # Do not split command in many lines using `\` because this results in
    # export: command not found error during container startup
    command: bash -c 'export PATH=/opt/conda/bin/:/opt/mlserver/.local/bin:${PATH}:/usr/bin && export PYTHONPATH=/opt/mlserver/.local/lib/python3.8/site-packages/:${PYTHONPATH} && eval $(/opt/conda/bin/conda shell.bash hook 2> /dev/null) && mlserver start ${MLSERVER_MODELS_DIR}'
    working-dir: "/opt/mlserver"
    environment:
      MLSERVER_ENV_TARBALL: "/mnt/models/environment.tar.gz"
      MLSERVER_MODELS_DIR: "/mnt/models"
      LD_LIBRARY_PATH: "/usr/local/nvidia/lib64:/opt/conda/lib/python3.8/site-packages/nvidia/cuda_runtime/lib:$LD_LIBRARY_PATH"
      TRANSFORMERS_CACHE: "/opt/mlserver/.cache"
      NUMBA_CACHE_DIR: "/opt/mlserver/.cache"
platforms:
  amd64:

parts:
  mlserver-mlflow:
    plugin: nil
    source: https://github.com/SeldonIO/MLServer
    source-type: git
    source-tag: 1.3.5
    build-packages:
      - python3-dev
      - python3-setuptools
      - python3-pip
      - python-is-python3
    override-build: |

      mkdir -p ${CRAFT_PART_INSTALL}/opt/mlserver/dist
      mkdir -p ${CRAFT_PART_INSTALL}/opt/openapi
      ./hack/build-wheels.sh ${CRAFT_PART_INSTALL}/opt/mlserver/dist

    override-stage: |
      export ROCK_RUNTIME="mlflow"
      export PYTHON_VERSION="3.8.16"
      export CONDA_VERSION="22.11.1"
      export RUNTIMES="mlserver_${ROCK_RUNTIME}"
      export MINIFORGE_VERSION="${CONDA_VERSION}-4"
      export MLSERVER_PATH=opt/mlserver
      export CONDA_PATH=opt/conda
      export PATH=/opt/mlserver/.local/bin:/opt/conda/bin:$PATH

      # Install Conda, Python 3.8 and FFmpeg
      curl -L -o ~/miniforge3.sh https://github.com/conda-forge/miniforge/releases/download/${MINIFORGE_VERSION}/Miniforge3-${MINIFORGE_VERSION}-Linux-x86_64.sh
      bash ~/miniforge3.sh -b -u -p ${CONDA_PATH}
      rm ~/miniforge3.sh
      ${CONDA_PATH}/bin/conda install --yes conda=${CONDA_VERSION} python=${PYTHON_VERSION} ffmpeg
      ${CONDA_PATH}/bin/conda clean -tipy
      mkdir -p etc/profile.d
      ln -sf ${CONDA_PATH}/etc/profile.d/conda.sh etc/profile.d/conda.sh
      echo ". ${CONDA_PATH}/etc/profile.d/conda.sh" >> ~/.bashrc
      echo "PATH=${PATH}" >> ~/.bashrc
      ${CONDA_PATH}/bin/conda init bash
      echo "conda activate base" >> ~/.bashrc
      chgrp -R root opt/conda && chmod -R g+rw opt/conda

      # install required wheels
      mkdir -p ${MLSERVER_PATH}
      mkdir -p ./wheels
      cp -p ${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver-*.whl ./wheels
      cp -p ${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver_${ROCK_RUNTIME}-*.whl ./wheels
      # setup pip to be from conda
      . ${CONDA_PATH}/etc/profile.d/conda.sh
      pip install --prefix ${MLSERVER_PATH}/.local --upgrade pip wheel setuptools
      pip install --prefix ${MLSERVER_PATH}/.local $(ls "./wheels/mlserver-"*.whl)
      pip install --prefix ${MLSERVER_PATH}/.local $(ls "./wheels/mlserver_${ROCK_RUNTIME}-"*.whl)
      # Pin starlette due to https://github.com/canonical/seldonio-rocks/issues/80
      echo starlette==0.22.0 >> ${CRAFT_PART_SRC}/requirements/docker.txt
      pip install --prefix ${MLSERVER_PATH}/.local -r ${CRAFT_PART_SRC}/requirements/docker.txt
      chown -R root:root ${MLSERVER_PATH} && chmod -R 777 ${MLSERVER_PATH}

      # conda writes shebangs with its path everywhere, and in crafting, that will be, for example:
      # #!/root/stage/opt/conda/...
      #
      # Snip off the /root/stage part
      bash -c "grep -R -E '/root/stage' opt/ 2>/dev/null | grep -v Bin | awk '{split(\$0,out,\":\"); print out[1]}' | uniq | xargs -I{} sed -i -e 's/\/root\/stage//' {}"

      # replace first line of mlserver script with reference to installed Conda python
      export CONDA_PYTHON="#\!\/opt\/conda\/bin\/python"
      sed -i "1s/.*/${CONDA_PYTHON}/" ${MLSERVER_PATH}/.local/bin/mlserver

      # clean wheels
      rm -rf ./wheels

    override-prime: |
      # copy all artifacts
      cp -rp ${CRAFT_STAGE}/opt .

      # copy required files
      mkdir -p licenses
      cp ${CRAFT_PART_SRC}/licenses/license.txt licenses/
      mkdir -p hack
      cp ${CRAFT_PART_SRC}/hack/build-env.sh hack/
      cp ${CRAFT_PART_SRC}/hack/generate_dotenv.py hack/
      cp ${CRAFT_PART_SRC}/hack/activate-env.sh hack/

  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
      dpkg-query -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
      > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query
