# Based on https://github.com/SeldonIO/MLServer/blob/1.3.2/Dockerfile
# Operator version is 1.17.1 version for this rock can be found in
# https://github.com/SeldonIO/seldon-core/blob/v1.17.1/operator/config/manager/configmap.yaml
name: mlserver
summary: An image for Seldon MLServer
description: |
  This image is used as part of the Charmed Kubeflow product.
version: 1.3.2
license: Apache-2.0
base: ubuntu@20.04
run-user: _daemon_
services:
  mlserver:
    override: replace
    summary: "mlserver service"
    startup: enabled
    command: '/bin/bash -c "source venv/bin/activate && mlserver start ${MLSERVER_MODELS_DIR}"'
    working-dir: "/opt/mlserver"
    user: "mlserver"
    environment:
      PATH: "$PATH:/opt/mlserver/venv/bin"
      MLSERVER_MODELS_DIR: "/mnt/models/"
      LD_LIBRARY_PATH: "/opt/mlserver/venv/lib/python3.8/site-packages/nvidia/cuda_runtime/lib:$LD_LIBRARY_PATH"
      TRANSFORMERS_CACHE: "/opt/mlserver/.cache"
      NUMBA_CACHE_DIR: "/opt/mlserver/.cache"
platforms:
  amd64:

parts:
  mlserver:
    plugin: nil
    source: https://github.com/SeldonIO/MLServer
    source-type: git
    source-tag: 1.3.2
    overlay-packages:
      - python3-dev
      - python3-distutils
    build-packages:
      - python3-setuptools
      - python3-venv
      - python3-pip
      - ffmpeg
    override-build: |

      mkdir -p ${CRAFT_PART_INSTALL}/opt/mlserver/dist
      mkdir -p ${CRAFT_PART_INSTALL}/opt/mlserver/requirements
      cp ${CRAFT_PART_SRC}/setup.py .
      cp ${CRAFT_PART_SRC}/MANIFEST.in .
      cp ${CRAFT_PART_SRC}/README.md .

      sed -i \
      -e 's/\bpython\b/python3.8/g' \
      hack/build-wheels.sh

      ./hack/build-wheels.sh ${CRAFT_PART_INSTALL}/opt/mlserver/dist
      cp -R ./requirements ${CRAFT_PART_INSTALL}/opt/mlserver

    override-stage: |
      export PYTHON_VERSION="3.8.16"
      export MLSERVER_PATH=opt/mlserver
      export PATH=/opt/mlserver/venv/bin:$PATH
      
      # Create and activate a virtual environment
      mkdir -p ${MLSERVER_PATH}
      python3.8 -m venv ${MLSERVER_PATH}/venv
      source ${MLSERVER_PATH}/venv/bin/activate
      
      # Upgrade pip and install setuptools and wheel
      pip install --upgrade pip wheel 'setuptools<65.6.0'
      
      # Install required wheels
      #mkdir -p ./wheels
      #cp -p ${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver{,-huggingface,-mlflow,-sklearn,-xgboost}-*.whl ./wheels

      
      pip install --no-cache-dir $(ls "${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver-"*.whl)
      pip install --no-cache-dir $(ls "${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver_huggingface-"*.whl)
      pip install --no-cache-dir $(ls "${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver_mlflow-"*.whl)
      pip install --no-cache-dir $(ls "${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver_sklearn-"*.whl)
      pip install --no-cache-dir $(ls "${CRAFT_PART_INSTALL}/opt/mlserver/dist/mlserver_xgboost-"*.whl)
      pip install --no-cache-dir -r ${CRAFT_PART_INSTALL}/opt/mlserver/requirements/docker.txt

      # Clear pip cache
      pip cache purge
      rm -rf /root/.cache/pip

      # Adjust permissions
      chown -R root:root ${MLSERVER_PATH} && chmod -R 777 ${MLSERVER_PATH}
      
      # Update mlserver script to reference the correct Python executable
      export PYTHON_PATH="/opt/mlserver/venv/bin/python3.8"
      sed -i "1s|.*|#!${PYTHON_PATH}|" ${MLSERVER_PATH}/venv/bin/mlserver
      
    override-prime: |
      # copy all artifacts
      cp -rp ${CRAFT_STAGE}/opt .

      # copy required files
      mkdir -p licenses
      cp ${CRAFT_PART_SRC}/licenses/license.txt licenses/
      mkdir -p hack
      cp ${CRAFT_PART_SRC}/hack/build-env.sh hack/
      cp ${CRAFT_PART_SRC}/hack/generate_dotenv.py hack/
      cp ${CRAFT_PART_SRC}/hack/activate-env.sh hack/

  # not-root user for this rock should be 'mlserver'  
  non-root-user:
    plugin: nil
    after: [ mlserver ]
    overlay-script: |
      useradd -R $CRAFT_OVERLAY -M -s /bin/bash -N -u 1001 mlserver
    override-prime: |
      craftctl default    
      chown -R 584792:users opt/mlserver
      chmod -R 777 opt/mlserver

  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
      dpkg-query -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
      > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query
