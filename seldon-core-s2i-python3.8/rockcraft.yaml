# https://github.com/SeldonIO/seldon-core/blob/master/wrappers/s2i/python/Dockerfile.gpu
name: seldon-core-s2i-gpu
summary: Run s2i for Seldon Core
description: |
  Seldon core converts your ML modelsoperatonr (Tensorflow, Pytorch, H2o, etc.) or
  language wrappers (Python, Java, etc.) into production REST/GRPC
  microservices.

  Seldon handles scaling to thousands of production machine learning models and
  provides advanced machine learning capabilities out of the box including
  Advanced Metrics, Request Logging, Explainers, Outlier Detectors, A/B Tests,
  Canaries and more.

version: "1.15.0_22.04_1"
license: Apache-2.0
build-base: ubuntu:22.04
base: bare
run-user: _daemon_
services:
  manager:
    override: replace
    summary: "seldon-core-s2i-gpu service"
    command: /bin/bash # IC: is this command correct?
    startup: enabled
platforms:
  amd64:

parts:
  s2i:
    plugin: nil
    source: https://github.com/SeldonIO/seldon-core
    source-type: git
    source-tag: v1.16.0
    stage-packages:
      - wget
      - git
      - build-essential
      - make
      - automake
      - libsm6
      - libxext6
      - libxrender-dev
      - libglib2.0-0
    override-stage: |
      set -xe

      export CONDA_REPO="https://repo.anaconda.com/miniconda"
      export CONDA_TARGET="Linux-x86_64"
      export CONDA_DOWNLOAD_VERSION="py38_4.12.0"
      export CONDA_VERSION="4.13.0"
      export PYTHON_VERSION="3.8"
      export CONDA_PATH=opt/conda

      curl -L https://github.com/certifi/python-certifi/archive/master.tar.gz -o certifi-python-certifi.tar.gz
      curl -L ${CONDA_REPO}/Miniconda3-${CONDA_DOWNLOAD_VERSION}-${CONDA_TARGET}.sh -o ~/miniconda.sh
      
      chmod +x ~/miniconda.sh
      bash ~/miniconda.sh -b -u -p opt/conda
      rm ~/miniconda.sh
      ${CONDA_PATH}/bin/conda install --yes -c conda-forge conda=${CONDA_VERSION} python=${PYTHON_VERSION}
      ${CONDA_PATH}/bin/conda clean -tipy
      mkdir -p etc/profile.d
      ln -sf ${CONDA_PATH}/etc/profile.d/conda.sh etc/profile.d/conda.sh
      echo ". ${CONDA_PATH}/etc/profile.d/conda.sh" >> ~/.bashrc
      echo "PATH=${PATH}" >> ~/.bashrc
      bash -c "${CONDA_PATH}/bin/conda init bash"
      echo "conda activate base" >> ~/.bashrc
      chgrp -R root opt/conda && chmod -R g+rw opt/conda

      # conda writes shebangs with its path everywhere, and in crafting, that will be, for example:
      # #!/root/stage/opt/conda/...
      #
      # Snip off the /root/stage part
      bash -c "grep -R -E '/root/stage' opt/ 2>/dev/null | grep -v Bin | awk '{split(\$0,out,\":\"); print out[1]}' | uniq | xargs -I{} sed -i -e 's/\/root\/stage//' {}"

      mkdir -p ${CRAFT_PART_INSTALL}/s2i/bin
      
      install -D -m755 \
          ${CRAFT_PART_SRC}/wrappers/s2i/python/s2i/bin/assemble \
          ${CRAFT_PART_INSTALL}/s2i/bin/assemble
      
      install -D -m755 \
          ${CRAFT_PART_SRC}/wrappers/s2i/python/s2i/bin/run \
          ${CRAFT_PART_INSTALL}/s2i/bin/run
      
      install -D -m755 \
          ${CRAFT_PART_SRC}/wrappers/s2i/python/s2i/bin/save-artifacts \
          ${CRAFT_PART_INSTALL}/s2i/bin/save-artifacts
      
      install -D -m755 \
          ${CRAFT_PART_SRC}/wrappers/s2i/python/s2i/bin/usage \
          ${CRAFT_PART_INSTALL}/s2i/bin/usage

      mkdir -p ${CRAFT_PART_INSTALL}/microservice
      cp -R ${CRAFT_PART_BUILD}/python ${CRAFT_PART_INSTALL}/microservice/python
      cd ${CRAFT_PART_INSTALL}/microservice/python
      pip install .
      mkdir -p ${CRAFT_PART_INSTALL}/.conda
      chmod a+rwx ${CRAFT_PART_INSTALL}/.conda
      chown -R 8888 ${CRAFT_PART_INSTALL}/microservice
      ${CRAFT_PRIME}/opt/conda/bin/conda clean --yes --index-cache

    override-prime: |
      cp -rp ${CRAFT_STAGE}/opt opt/

